{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/components/chat/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport Message from '../message/Message';\nimport './chat.css';\nimport { useContext, useState } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const [messages, setMessages] = useState([{\n    senderID: \"000\",\n    text: \"hey man\",\n    createdAt: Date.now(),\n    senderProfilePicture: \"https://upload.wikimedia.org/wikipedia/en/d/dc/MichaelScott.png\"\n  }]);\n\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      createdAt: Date.now(),\n      senderProfilePicture: user === null || user === void 0 ? void 0 : user.profilePicture\n    }; // const receiverId = currentChat.members.find(\n    //   (member) => member !== user._id\n    // );\n    // socket.current.emit(\"sendMessage\", {\n    //   senderId: user._id,\n    //   receiverId,\n    //   text: newMessage,\n    // });\n\n    try {\n      // const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, message]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatTop\",\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n        message: m,\n        own: m.senderID === user._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatMessageInput\",\n        placeholder: \"write something...\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatSendButton\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"r3408CDJ2HGbNhoJn9VPJf5FLvE=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/components/chat/Chat.jsx"],"names":["Message","useContext","useState","AuthContext","Chat","newMessage","setNewMessage","user","messages","setMessages","senderID","text","createdAt","Date","now","senderProfilePicture","handleSend","e","preventDefault","message","_id","profilePicture","err","console","log","map","m","target","value"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAO,YAAP;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWN,UAAU,CAACE,WAAD,CAA3B;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CACvC;AACEQ,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHb;AAIEC,IAAAA,oBAAoB,EAAE;AAJxB,GADuC,CAAD,CAAxC;;AAQA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AACdT,MAAAA,QAAQ,EAAEH,IAAI,CAACa,GADD;AAEdT,MAAAA,IAAI,EAAEN,UAFQ;AAGdO,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHG;AAIdC,MAAAA,oBAAoB,EAAER,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEc;AAJd,KAAhB,CAH8B,CAU9B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAI;AACF;AACAZ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,OAAd,CAAD,CAAX;AACAb,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAJD,CAIE,OAAOgB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GA3BD;;AA6BA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGd,QAAQ,CAACiB,GAAT,CAAcC,CAAD,iBACZ,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,CAAlB;AAAqB,QAAA,GAAG,EAAEA,CAAC,CAAChB,QAAF,KAAeH,IAAI,CAACa;AAA9C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,WAAW,EAAC,oBAFd;AAGE,QAAA,QAAQ,EAAGH,CAAD,IAAOX,aAAa,CAACW,CAAC,CAACU,MAAF,CAASC,KAAV,CAHhC;AAIE,QAAA,KAAK,EAAEvB;AAJT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEW,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADF;AAsBD;;GA/DuBZ,I;;KAAAA,I","sourcesContent":["import Message from '../message/Message'\nimport './chat.css'\nimport { useContext, useState } from 'react';\nimport { AuthContext } from '../../context/AuthContext'\n\nexport default function Chat() {\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { user } = useContext(AuthContext)\n\n  const [messages, setMessages] = useState([\n    {\n      senderID: \"000\",\n      text: \"hey man\",\n      createdAt: Date.now(),\n      senderProfilePicture: \"https://upload.wikimedia.org/wikipedia/en/d/dc/MichaelScott.png\"}]);\n  \n\n  const handleSend = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      createdAt: Date.now(),\n      senderProfilePicture: user?.profilePicture\n    };\n\n    // const receiverId = currentChat.members.find(\n    //   (member) => member !== user._id\n    // );\n\n    // socket.current.emit(\"sendMessage\", {\n    //   senderId: user._id,\n    //   receiverId,\n    //   text: newMessage,\n    // });\n\n    try {\n      // const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, message]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  return (\n    <>\n    <div className=\"chatTop\">\n      {messages.map((m) => (\n        <Message message={m} own={m.senderID === user._id} />\n      ))}\n    </div>\n\n    <div className=\"chatBottom\">\n      <textarea\n        className=\"chatMessageInput\"\n        placeholder=\"write something...\"\n        onChange={(e) => setNewMessage(e.target.value)}\n        value={newMessage}\n      >\n      </textarea>\n      <button className=\"chatSendButton\" onClick={handleSend}>\n        Send\n      </button>\n    </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}