{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/components/chat/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport Message from '../message/Message';\nimport './chat.css';\nimport { useContext, useRef, useState, useEffect } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  room\n}) {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  const [messages, setMessages] = useState([]);\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n  }, []);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(users);\n    });\n  }, [user]);\n\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      createdAt: Date.now(),\n      senderProfilePicture: user === null || user === void 0 ? void 0 : user.profilePicture\n    }; // const receiverId = currentChat.members.find(\n    //   (member) => member !== user._id\n    // );\n    // socket.current.emit(\"sendMessage\", {\n    //   senderId: user._id,\n    //   receiverId,\n    //   text: newMessage,\n    // });\n\n    try {\n      // const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, message]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatTop\",\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          message: m,\n          own: m.senderID === user._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, m._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatMessageInput\",\n        placeholder: \"write something...\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatSendButton\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"X85BnM46XIZscpectUBXRu7GCns=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/components/chat/Chat.jsx"],"names":["Message","useContext","useRef","useState","useEffect","AuthContext","io","Chat","room","newMessage","setNewMessage","user","scrollRef","messages","setMessages","socket","current","emit","_id","on","users","console","log","handleSend","e","preventDefault","message","senderID","text","createdAt","Date","now","senderProfilePicture","profilePicture","err","scrollIntoView","behavior","map","m","target","value"],"mappings":"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","sourcesContent":["import Message from '../message/Message'\nimport './chat.css'\nimport { useContext, useRef, useState, useEffect } from 'react';\nimport { AuthContext } from '../../context/AuthContext'\nimport { io } from 'socket.io-client'\n\nexport default function Chat({room}) {\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { user } = useContext(AuthContext)\n  const scrollRef = useRef()\n  const [messages, setMessages] = useState([]);\n  const socket = useRef()\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\")\n  }, [])\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id)\n    socket.current.on(\"getUsers\", (users) => {\n      console.log(users)\n    })\n  }, [user])\n  \n\n  const handleSend = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      createdAt: Date.now(),\n      senderProfilePicture: user?.profilePicture\n    };\n\n    // const receiverId = currentChat.members.find(\n    //   (member) => member !== user._id\n    // );\n\n    // socket.current.emit(\"sendMessage\", {\n    //   senderId: user._id,\n    //   receiverId,\n    //   text: newMessage,\n    // });\n\n    try {\n      // const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, message]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({behavior: 'smooth'})\n  }, [messages])\n  \n  return (\n    <>\n    <div className=\"chatTop\">\n      {messages.map((m) => (\n        <div ref={scrollRef} key={m._id}>\n          <Message message={m} own={m.senderID === user._id} />\n        </div>\n      ))}\n    </div>\n\n    <div className=\"chatBottom\">\n      <textarea\n        className=\"chatMessageInput\"\n        placeholder=\"write something...\"\n        onChange={(e) => setNewMessage(e.target.value)}\n        value={newMessage}\n      >\n      </textarea>\n      <button className=\"chatSendButton\" onClick={handleSend}>\n        Send\n      </button>\n    </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}