{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/main/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './main.css';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const [room, setRoom] = useState({});\n\n  const handleCreate = async e => {\n    e.preventDefault(); // see if user has existing room\n\n    try {\n      const res = await axios.get(`/rooms/${user._id}/userroom`);\n      setRoom(res.data);\n      console.log(\"GET ROOM\");\n      console.log(res.data);\n      console.log(room);\n    } catch (err) {\n      console.log(err);\n    } // delete existing room\n\n\n    if (room !== null) {\n      try {\n        await axios.delete(`/rooms/${user._id}`);\n      } catch (err) {\n        console.log(err);\n      }\n    } // create new room and redirect\n\n\n    try {\n      const res = await axios.post('/rooms', {\n        hostID: user._id,\n        members: [user._id]\n      });\n      history.push(`/room/${res.data.code}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mainLogo\",\n          children: \"Welcome to StreamTube! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mainDescription\",\n          children: \"Create your own room or join an existing one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainBottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainOptionsBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mainCreateButton\",\n            onClick: handleCreate,\n            children: \"Create a Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/join`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mainJoinButton\",\n              children: \"Join a Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"on+wlhuCBqLtcxEd5OeSCCRx4nI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/main/Main.jsx"],"names":["useContext","useState","Link","AuthContext","axios","useHistory","Main","user","history","room","setRoom","handleCreate","e","preventDefault","res","get","_id","data","console","log","err","delete","post","hostID","members","push","code"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './main.css'\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router\";\n\nexport default function Main() {\n    const { user } = useContext(AuthContext)\n    const history = useHistory();\n    const [room, setRoom] = useState({})\n\n    const handleCreate = async (e) => {\n        e.preventDefault();\n\n        // see if user has existing room\n        try {\n            const res = await axios.get(`/rooms/${user._id}/userroom`);\n            setRoom(res.data)\n            console.log(\"GET ROOM\")\n            console.log(res.data)\n            console.log(room)\n        } catch(err) {\n            console.log(err)\n        }\n\n        // delete existing room\n        if (room !== null) {\n            try {\n                await axios.delete(`/rooms/${user._id}`);\n            } catch(err) {\n                console.log(err)\n            }\n        }\n\n        // create new room and redirect\n        try {\n            const res = await axios.post('/rooms', { hostID: user._id, members: [user._id] });\n            history.push(`/room/${res.data.code}`)\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"mainWrapper\">\n                <div className=\"mainTop\">\n                    <h3 className=\"mainLogo\">Welcome to StreamTube! </h3>\n                    <span className=\"mainDescription\">\n                        Create your own room or join an existing one\n                    </span>\n                </div>\n\n                <div className=\"mainBottom\">\n                    <div className=\"mainOptionsBox\">\n                        <button className=\"mainCreateButton\" onClick={handleCreate}>\n                                Create a Room\n                        </button>\n\n                        <Link to={`/join`}>\n                            <button className=\"mainJoinButton\">\n                                Join a Room\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}