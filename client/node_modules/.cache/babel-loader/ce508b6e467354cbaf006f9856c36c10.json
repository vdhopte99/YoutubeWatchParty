{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/room/Room.jsx\",\n    _s = $RefreshSig$();\n\nimport './room.css';\nimport Header from '../../components/header/Header';\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Search } from '@material-ui/icons';\nimport Message from '../../components/message';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n\n  const [room, setRoom] = useState({});\n  const roomCode = useParams().roomCode;\n  const {\n    user\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [videoID, setVideoID] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const scrollRef = useRef();\n  const [messages, setMessages] = useState([]);\n  const socket = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n\n  const handleLeave = async e => {\n    e.preventDefault(); // if host leaves delete room\n\n    if (user._id === room.hostID) {\n      // delete room messages first\n      try {\n        await axios.delete(`/messages/${room._id}`);\n      } catch (err) {\n        console.log(err);\n      } // delete room\n\n\n      try {\n        await axios.delete(`/rooms/${user._id}`);\n        history.push(`/login`);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      history.push(`/login`);\n    }\n  };\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    setVideoID(query.split('v=')[1].split('_')[0]); // setVideoID(YOUTUBE_VIDEO_ID_REGEX.exec(query))\n    // console.log(videoID)\n    // try {\n    //     const res1 = await axios.get(`/youtube`, { query: query });\n    //     const res2 = await axios.get(`/youtube`, { query: res.data.items[0].id.videoId});\n    //     console.log()\n    // } catch(err) {\n    //     console.log(err)\n    // }\n  }; // get room object\n\n\n  useEffect(() => {\n    const fetchRoom = async () => {\n      const res = await axios.get(`/rooms/${roomCode}`);\n      setRoom(res.data);\n    };\n\n    fetchRoom();\n  }, [roomCode]); // initialize socket connection\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\"); // look for incoming messages\n\n    socket.current.on(\"newMessage\", data => {\n      setArrivalMessage({\n        senderID: data.senderID,\n        text: data.text,\n        createdAt: Date.now(),\n        roomID: room._id,\n        senderProfilePicture: data.senderProfilePicture\n      });\n    });\n  }, [room]); // join socket room\n\n  useEffect(() => {\n    room && socket.current.emit(\"joinRoom\", room.code);\n  }, [room]); // get room messages\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${room._id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [room]); // new message from socket\n\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      roomID: room._id,\n      senderProfilePicture: user.profilePicture\n    }; // send message to socket\n\n    socket.current.emit(\"sendMessage\", {\n      senderID: user._id,\n      roomName: room.code,\n      text: newMessage,\n      senderProfilePicture: user.profilePicture\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; // scroll to bottom of messages\n\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), room ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomTopbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarLeft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"roomBackButton\",\n            onClick: handleLeave,\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarCenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSearchbar\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              className: \"searchIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Enter YouTube video link here\",\n              className: \"searchInput\",\n              onChange: e => setQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarRight\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchSubmit\",\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomVideo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomVideoWrapper\",\n            children: videoID ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videoPlayer\",\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"1070\",\n                height: \"562\",\n                src: `http://youtube.com/embed/${videoID}`,\n                frameBorder: \"0\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"noVideoMessage\",\n              children: \"Enter a YouTube video link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomChat\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomChatWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.senderID === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)\n              }, m._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSendButton\",\n                onClick: handleSend,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Room does not exist\"\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Room, \"3uLUGQpaKd/RnXF6u40bJCH4yTw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/room/Room.jsx"],"names":["Header","useParams","useHistory","useState","useEffect","useContext","useRef","axios","AuthContext","Search","Message","io","Room","room","setRoom","roomCode","user","history","query","setQuery","videoID","setVideoID","newMessage","setNewMessage","scrollRef","messages","setMessages","socket","arrivalMessage","setArrivalMessage","handleLeave","e","preventDefault","_id","hostID","delete","err","console","log","push","handleSearch","split","fetchRoom","res","get","data","current","on","senderID","text","createdAt","Date","now","roomID","senderProfilePicture","emit","code","getMessages","prev","handleSend","message","profilePicture","roomName","post","scrollIntoView","behavior","target","value","map","m"],"mappings":"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","sourcesContent":["import './room.css'\nimport Header from '../../components/header/Header'\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Search } from '@material-ui/icons'\nimport Message from '../../components/message'\nimport { io } from 'socket.io-client'\n\nexport default function Room() {\n    const [room, setRoom] = useState({})\n    const roomCode = useParams().roomCode;\n    const { user } = useContext(AuthContext)\n    const history = useHistory();\n    const [query, setQuery] = useState(\"\")\n    const [videoID, setVideoID] = useState(null)\n    const [newMessage, setNewMessage] = useState(\"\");\n    const scrollRef = useRef()\n    const [messages, setMessages] = useState([]);\n    const socket = useRef()\n    const [arrivalMessage, setArrivalMessage] = useState(null);\n\n    const handleLeave = async (e) => {\n        e.preventDefault();\n        \n        // if host leaves delete room\n        if (user._id === room.hostID) {\n            // delete room messages first\n            try {\n                await axios.delete(`/messages/${room._id}`);\n            } catch(err) {\n                console.log(err)\n            }\n\n            // delete room\n            try {\n                await axios.delete(`/rooms/${user._id}`);\n                history.push(`/login`)\n            } catch(err) {\n                console.log(err)\n            }\n        }\n        else {\n            history.push(`/login`)\n        }\n    }\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        setVideoID(query.split('v=')[1].split('_')[0])\n\n        // setVideoID(YOUTUBE_VIDEO_ID_REGEX.exec(query))\n        // console.log(videoID)\n\n        // try {\n        //     const res1 = await axios.get(`/youtube`, { query: query });\n        //     const res2 = await axios.get(`/youtube`, { query: res.data.items[0].id.videoId});\n        //     console.log()\n        // } catch(err) {\n        //     console.log(err)\n        // }\n    }\n\n    // get room object\n    useEffect(() => {\n        const fetchRoom = async () => {\n            const res = await axios.get(`/rooms/${roomCode}`);\n            setRoom(res.data);\n        };\n        fetchRoom();\n    }, [roomCode]);\n\n    // initialize socket connection\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n\n    // look for incoming messages\n    socket.current.on(\"newMessage\", (data) => {\n      setArrivalMessage({\n        senderID: data.senderID,\n        text: data.text,\n        createdAt: Date.now(),\n        roomID: room._id,\n        senderProfilePicture: data.senderProfilePicture\n      });\n    });\n  }, [room]);\n\n  // join socket room\n  useEffect(() => {\n    room && socket.current.emit(\"joinRoom\", room.code)\n  }, [room])\n\n  // get room messages\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${room._id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [room]);\n\n  // new message from socket\n  useEffect(() => {\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      roomID: room._id,\n      senderProfilePicture: user.profilePicture\n    };\n\n    // send message to socket\n    socket.current.emit(\"sendMessage\", { senderID: user._id, roomName: room.code, text: newMessage, senderProfilePicture: user.profilePicture})\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // scroll to bottom of messages\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({behavior: 'smooth'})\n  }, [messages])\n\n    return (\n        <>\n        <Header/>\n        {room ? (\n            <>\n            <div className='roomTopbar'>\n                <div className=\"roomTopbarLeft\">\n                    <button className=\"roomBackButton\" onClick={(handleLeave)}>\n                        Leave Room\n                    </button>\n                </div>\n\n                <div className=\"roomTopbarCenter\">\n                    <div className=\"roomSearchbar\">\n                        <Search className=\"searchIcon\"/>\n                        <input\n                          placeholder=\"Enter YouTube video link here\"\n                          className=\"searchInput\"\n                          onChange={(e) => setQuery(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"roomTopbarRight\">\n                    <button className=\"searchSubmit\" onClick={(handleSearch)}>\n                        Search\n                    </button>\n                </div>\n            </div>\n\n            <div className='room'>\n                <div className=\"roomVideo\">\n                    <div className=\"roomVideoWrapper\">\n                        {videoID ? (\n                            <div className=\"videoPlayer\">\n                                <iframe\n                                  width='1070'\n                                  height='562'\n                                  src={`http://youtube.com/embed/${videoID}`} \n                                  frameBorder='0' \n                                  allowFullScreen>\n                                </iframe>\n                            </div>\n                        ) : (\n                            <h1 className=\"noVideoMessage\">Enter a YouTube video link</h1>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"roomChat\">\n                    <div className=\"roomChatWrapper\">\n                        <div className=\"chatTop\">\n                            {messages.map((m) => (\n                                <div ref={scrollRef} key={m._id}>\n                                    <Message message={m} own={m.senderID === user._id} />\n                                </div>\n                            ))}\n                        </div>\n\n                        <div className=\"chatBottom\">\n                            <textarea\n                              className=\"chatMessageInput\"\n                              placeholder=\"write something...\"\n                              onChange={(e) => setNewMessage(e.target.value)}\n                              value={newMessage}\n                            >\n                            </textarea>\n                            <button className=\"chatSendButton\" onClick={handleSend}>\n                                Send\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        ) : (\n            <>Room does not exist</>\n        )}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}