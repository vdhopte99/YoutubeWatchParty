{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/room/Room.jsx\",\n    _s = $RefreshSig$();\n\nimport './room.css';\nimport VideoPlayer from '../../components/videoPlayer/VideoPlayer';\nimport Chat from '../../components/chat/Chat';\nimport Header from '../../components/header/Header';\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Search } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n\n  const [room, setRoom] = useState({});\n  const roomCode = useParams().roomCode;\n  const {\n    user\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [videoID, setVideoID] = useState(null);\n\n  const handleLeave = async e => {\n    e.preventDefault(); // if host leaves delete room\n\n    if (user._id === room.hostID) {\n      // delete room messages first\n      try {\n        await axios.delete(`/messages/${room._id}`);\n      } catch (err) {\n        console.log(err);\n      } // delete room\n\n\n      try {\n        await axios.delete(`/rooms/${user._id}`);\n        history.push(`/login`);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      history.push(`/login`);\n    }\n  };\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    setVideoID(query.split('v=')[1].split('_')[0]); // setVideoID(YOUTUBE_VIDEO_ID_REGEX.exec(query))\n    // console.log(videoID)\n    // try {\n    //     const res1 = await axios.get(`/youtube`, { query: query });\n    //     const res2 = await axios.get(`/youtube`, { query: res.data.items[0].id.videoId});\n    //     console.log()\n    // } catch(err) {\n    //     console.log(err)\n    // }\n  }; // get room object\n\n\n  useEffect(() => {\n    const fetchRoom = async () => {\n      const res = await axios.get(`/rooms/${roomCode}`);\n      setRoom(res.data);\n    };\n\n    fetchRoom();\n  }, [roomCode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), room ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomTopbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarLeft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"roomBackButton\",\n            onClick: handleLeave,\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarCenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSearchbar\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              className: \"searchIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Enter YouTube video link here\",\n              className: \"searchInput\",\n              onChange: e => setQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarRight\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchSubmit\",\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomVideo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomVideoWrapper\",\n            children: videoID ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videoPlayer\",\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"1070\",\n                height: \"562\",\n                src: `http://youtube.com/embed/${videoID}`,\n                frameBorder: \"0\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"noVideoMessage\",\n              children: \"Enter a YouTube video link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomChat\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomChatWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.senderID === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)\n              }, m._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSendButton\",\n                onClick: handleSend,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Room does not exist\"\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Room, \"ws/XREYyfqGofAirXJP3wQo0NGU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/room/Room.jsx"],"names":["VideoPlayer","Chat","Header","useParams","useHistory","useState","useEffect","useContext","axios","AuthContext","Search","Room","room","setRoom","roomCode","user","history","query","setQuery","videoID","setVideoID","handleLeave","e","preventDefault","_id","hostID","delete","err","console","log","push","handleSearch","split","fetchRoom","res","get","data","target","value","messages","map","m","scrollRef","senderID","setNewMessage","newMessage","handleSend"],"mappings":"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","sourcesContent":["import './room.css'\nimport VideoPlayer from '../../components/videoPlayer/VideoPlayer'\nimport Chat from '../../components/chat/Chat'\nimport Header from '../../components/header/Header'\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Search } from '@material-ui/icons'\n\nexport default function Room() {\n    const [room, setRoom] = useState({})\n    const roomCode = useParams().roomCode;\n    const { user } = useContext(AuthContext)\n    const history = useHistory();\n    const [query, setQuery] = useState(\"\")\n    const [videoID, setVideoID] = useState(null)\n\n    const handleLeave = async (e) => {\n        e.preventDefault();\n        \n        // if host leaves delete room\n        if (user._id === room.hostID) {\n            // delete room messages first\n            try {\n                await axios.delete(`/messages/${room._id}`);\n            } catch(err) {\n                console.log(err)\n            }\n\n            // delete room\n            try {\n                await axios.delete(`/rooms/${user._id}`);\n                history.push(`/login`)\n            } catch(err) {\n                console.log(err)\n            }\n        }\n        else {\n            history.push(`/login`)\n        }\n    }\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        setVideoID(query.split('v=')[1].split('_')[0])\n\n        // setVideoID(YOUTUBE_VIDEO_ID_REGEX.exec(query))\n        // console.log(videoID)\n\n        // try {\n        //     const res1 = await axios.get(`/youtube`, { query: query });\n        //     const res2 = await axios.get(`/youtube`, { query: res.data.items[0].id.videoId});\n        //     console.log()\n        // } catch(err) {\n        //     console.log(err)\n        // }\n    }\n\n    // get room object\n    useEffect(() => {\n        const fetchRoom = async () => {\n            const res = await axios.get(`/rooms/${roomCode}`);\n            setRoom(res.data);\n        };\n        fetchRoom();\n      }, [roomCode]);\n    \n    return (\n        <>\n        <Header/>\n        {room ? (\n            <>\n            <div className='roomTopbar'>\n                <div className=\"roomTopbarLeft\">\n                    <button className=\"roomBackButton\" onClick={(handleLeave)}>\n                        Leave Room\n                    </button>\n                </div>\n\n                <div className=\"roomTopbarCenter\">\n                    <div className=\"roomSearchbar\">\n                        <Search className=\"searchIcon\"/>\n                        <input\n                          placeholder=\"Enter YouTube video link here\"\n                          className=\"searchInput\"\n                          onChange={(e) => setQuery(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"roomTopbarRight\">\n                    <button className=\"searchSubmit\" onClick={(handleSearch)}>\n                        Search\n                    </button>\n                </div>\n            </div>\n\n            <div className='room'>\n                <div className=\"roomVideo\">\n                    <div className=\"roomVideoWrapper\">\n                        {videoID ? (\n                            <div className=\"videoPlayer\">\n                                <iframe\n                                  width='1070'\n                                  height='562'\n                                  src={`http://youtube.com/embed/${videoID}`} \n                                  frameBorder='0' \n                                  allowFullScreen>\n                                </iframe>\n                            </div>\n                        ) : (\n                            <h1 className=\"noVideoMessage\">Enter a YouTube video link</h1>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"roomChat\">\n                    <div className=\"roomChatWrapper\">\n                        <div className=\"chatTop\">\n                            {messages.map((m) => (\n                                <div ref={scrollRef} key={m._id}>\n                                    <Message message={m} own={m.senderID === user._id} />\n                                </div>\n                            ))}\n                        </div>\n\n                        <div className=\"chatBottom\">\n                            <textarea\n                              className=\"chatMessageInput\"\n                              placeholder=\"write something...\"\n                              onChange={(e) => setNewMessage(e.target.value)}\n                              value={newMessage}\n                            >\n                            </textarea>\n                            <button className=\"chatSendButton\" onClick={handleSend}>\n                                Send\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        ) : (\n            <>Room does not exist</>\n        )}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}