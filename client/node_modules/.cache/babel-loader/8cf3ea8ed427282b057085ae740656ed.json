{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/components/chat/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport Message from '../message/Message';\nimport './chat.css';\nimport { useContext, useRef, useState, useEffect } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { io } from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  room\n}) {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  const [messages, setMessages] = useState([]);\n  const socket = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null); // initialize socket connection\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\"); // join socket room\n\n    socket.current.emit(\"joinRoom\", room.code);\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []); // new message from socket\n\n  useEffect(() => {\n    arrivalMessage && (room === null || room === void 0 ? void 0 : room.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, room]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id); // socket.current.on(\"getUsers\", (users) => {\n    //   setOnlineUsers(\n    //     user.followings.filter((f) => users.some((u) => u.userId === f))\n    //   );\n    // });\n  }, [user]); // get room messages\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${room._id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [room]);\n\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      roomID: room._id,\n      senderProfilePicture: user.profilePicture\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; // scroll to bottom of messages\n\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatTop\",\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          message: m,\n          own: m.senderID === user._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, m._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chatMessageInput\",\n        placeholder: \"write something...\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatSendButton\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"dh4FhNZamMICWwlIknjCMXJD9YU=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/components/chat/Chat.jsx"],"names":["Message","useContext","useRef","useState","useEffect","AuthContext","io","axios","Chat","room","newMessage","setNewMessage","user","scrollRef","messages","setMessages","socket","arrivalMessage","setArrivalMessage","current","emit","code","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","_id","getMessages","res","get","err","console","log","handleSend","e","preventDefault","message","senderID","roomID","senderProfilePicture","profilePicture","post","scrollIntoView","behavior","map","m","target","value"],"mappings":"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","sourcesContent":["import Message from '../message/Message'\nimport './chat.css'\nimport { useContext, useRef, useState, useEffect } from 'react';\nimport { AuthContext } from '../../context/AuthContext'\nimport { io } from 'socket.io-client'\nimport axios from 'axios'\n\nexport default function Chat({room}) {\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { user } = useContext(AuthContext)\n  const scrollRef = useRef()\n  const [messages, setMessages] = useState([]);\n  const socket = useRef()\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n\n  // initialize socket connection\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n\n    // join socket room\n    socket.current.emit(\"joinRoom\", room.code)\n\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, []);\n\n  // new message from socket\n  useEffect(() => {\n    arrivalMessage &&\n      room?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, room]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    // socket.current.on(\"getUsers\", (users) => {\n    //   setOnlineUsers(\n    //     user.followings.filter((f) => users.some((u) => u.userId === f))\n    //   );\n    // });\n  }, [user]);\n\n  // get room messages\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${room._id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [room]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      roomID: room._id,\n      senderProfilePicture: user.profilePicture\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // scroll to bottom of messages\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({behavior: 'smooth'})\n  }, [messages])\n  \n  return (\n    <>\n    <div className=\"chatTop\">\n      {messages.map((m) => (\n        <div ref={scrollRef} key={m._id}>\n          <Message message={m} own={m.senderID === user._id} />\n        </div>\n      ))}\n    </div>\n\n    <div className=\"chatBottom\">\n      <textarea\n        className=\"chatMessageInput\"\n        placeholder=\"write something...\"\n        onChange={(e) => setNewMessage(e.target.value)}\n        value={newMessage}\n      >\n      </textarea>\n      <button className=\"chatSendButton\" onClick={handleSend}>\n        Send\n      </button>\n    </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}