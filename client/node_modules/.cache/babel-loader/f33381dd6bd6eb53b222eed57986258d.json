{"ast":null,"code":"var _jsxFileName = \"/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/room/Room.jsx\",\n    _s = $RefreshSig$();\n\nimport './room.css';\nimport Header from '../../components/header/Header';\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Search } from '@material-ui/icons';\nimport Message from '../../components/message/Message';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n\n  const [room, setRoom] = useState({});\n  const roomCode = useParams().roomCode;\n  const {\n    user\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [videoID, setVideoID] = useState(\"\");\n  const [newMessage, setNewMessage] = useState(\"\");\n  const scrollRef = useRef();\n  const [messages, setMessages] = useState([]);\n  const socket = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [arrivalVideoID, setArrivalVideoID] = useState(null);\n  const [arrivalQuery, setArrivalQuery] = useState(null); // leave room\n\n  const handleLeave = async e => {\n    e.preventDefault(); // if host leaves delete room\n\n    if (user._id === room.hostID) {\n      // delete room messages first\n      try {\n        await axios.delete(`/messages/${room._id}`);\n      } catch (err) {\n        console.log(err);\n      } // delete room\n\n\n      try {\n        await axios.delete(`/rooms/${user._id}`);\n        history.push(`/login`);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      history.push(`/login`);\n    }\n  }; // search video\n\n\n  const handleSearch = async e => {\n    e.preventDefault();\n    const extractID = query.split('v=')[1].split('_')[0];\n    setVideoID(extractID);\n    console.log(\"HANDLE SEARCH\");\n    console.log(query);\n    console.log(videoID);\n    socket.current.emit(\"sendVideo\", {\n      videoID: videoID,\n      roomName: room.code\n    });\n    socket.current.emit(\"sendQuery\", {\n      query: query,\n      roomName: room.code\n    });\n  }; // get room object\n\n\n  useEffect(() => {\n    const fetchRoom = async () => {\n      const res = await axios.get(`/rooms/${roomCode}`);\n      setRoom(res.data);\n    };\n\n    fetchRoom();\n  }, [roomCode]); // initialize socket connection\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\"); // look for incoming messages\n\n    socket.current.on(\"newMessage\", data => {\n      setArrivalMessage({\n        senderID: data.senderID,\n        text: data.text,\n        createdAt: Date.now(),\n        roomID: room._id,\n        senderProfilePicture: data.senderProfilePicture\n      });\n    }); // look for incoming video update\n\n    socket.current.on(\"newVideo\", data => {\n      setArrivalVideoID(data.videoID);\n      console.log(\"NEW VIDEO\");\n      console.log(videoID);\n    }); // look for incoming query update\n\n    socket.current.on(\"newQuery\", data => {\n      setArrivalQuery(data.query);\n    });\n  }, [room]); // join socket room\n\n  useEffect(() => {\n    room && socket.current.emit(\"joinRoom\", room.code);\n  }, [room]); // get room messages\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${room._id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [room]); // new message from socket\n\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]); // new video from socket\n\n  useEffect(() => {\n    arrivalVideoID && setVideoID(arrivalVideoID);\n  }, [arrivalVideoID]); // new query from socket\n\n  useEffect(() => {\n    arrivalQuery && setQuery(arrivalQuery);\n  }, [arrivalQuery]);\n\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      roomID: room._id,\n      senderProfilePicture: user.profilePicture\n    }; // send message to socket\n\n    socket.current.emit(\"sendMessage\", {\n      senderID: user._id,\n      roomName: room.code,\n      text: newMessage,\n      senderProfilePicture: user.profilePicture\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; // scroll to bottom of messages\n\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), room ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roomTopbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarLeft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"roomBackButton\",\n            onClick: handleLeave,\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarCenter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomSearchbar\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              className: \"searchIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Enter YouTube video link here\",\n              className: \"searchInput\",\n              onChange: e => setQuery(e.target.value),\n              value: query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomTopbarRight\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchSubmit\",\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomVideo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomVideoWrapper\",\n            children: videoID ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videoPlayer\",\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"960\",\n                height: \"315\",\n                src: `https://www.youtube.com/embed/${videoID}`,\n                title: \"YouTube Video Player\",\n                frameBorder: \"0\",\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"noVideoMessage\",\n              children: \"Enter a YouTube video link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomChat\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomChatWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.senderID === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)\n              }, m._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSendButton\",\n                onClick: handleSend,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Room does not exist\"\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Room, \"G/cAs3shWvna/3S9KP7ieIXzHFU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/bigvdhopte/Documents/Vedant/Projects/StreamTube/client/src/pages/room/Room.jsx"],"names":["Header","useParams","useHistory","useState","useEffect","useContext","useRef","axios","AuthContext","Search","Message","io","Room","room","setRoom","roomCode","user","history","query","setQuery","videoID","setVideoID","newMessage","setNewMessage","scrollRef","messages","setMessages","socket","arrivalMessage","setArrivalMessage","arrivalVideoID","setArrivalVideoID","arrivalQuery","setArrivalQuery","handleLeave","e","preventDefault","_id","hostID","delete","err","console","log","push","handleSearch","extractID","split","current","emit","roomName","code","fetchRoom","res","get","data","on","senderID","text","createdAt","Date","now","roomID","senderProfilePicture","getMessages","prev","handleSend","message","profilePicture","post","scrollIntoView","behavior","target","value","map","m"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMY,QAAQ,GAAGd,SAAS,GAAGc,QAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWX,UAAU,CAACG,WAAD,CAA3B;AACA,QAAMS,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMqB,SAAS,GAAGlB,MAAM,EAAxB;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMwB,MAAM,GAAGrB,MAAM,EAArB;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAC2B,cAAD,EAAiBC,iBAAjB,IAAsC5B,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,IAAD,CAAhD,CAb2B,CAe3B;;AACA,QAAM+B,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAG7B;;AACA,QAAIpB,IAAI,CAACqB,GAAL,KAAaxB,IAAI,CAACyB,MAAtB,EAA8B;AAC1B;AACA,UAAI;AACA,cAAM/B,KAAK,CAACgC,MAAN,CAAc,aAAY1B,IAAI,CAACwB,GAAI,EAAnC,CAAN;AACH,OAFD,CAEE,OAAMG,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OANyB,CAQ1B;;;AACA,UAAI;AACA,cAAMjC,KAAK,CAACgC,MAAN,CAAc,UAASvB,IAAI,CAACqB,GAAI,EAAhC,CAAN;AACApB,QAAAA,OAAO,CAAC0B,IAAR,CAAc,QAAd;AACH,OAHD,CAGE,OAAMH,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAfD,MAgBK;AACDvB,MAAAA,OAAO,CAAC0B,IAAR,CAAc,QAAd;AACH;AACJ,GAvBD,CAhB2B,CAyC3B;;;AACA,QAAMC,YAAY,GAAG,MAAOT,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMS,SAAS,GAAG3B,KAAK,CAAC4B,KAAN,CAAY,IAAZ,EAAkB,CAAlB,EAAqBA,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAlB;AACAzB,IAAAA,UAAU,CAACwB,SAAD,CAAV;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAZ;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AAEAO,IAAAA,MAAM,CAACoB,OAAP,CAAeC,IAAf,CAAoB,WAApB,EAAiC;AAAE5B,MAAAA,OAAO,EAAEA,OAAX;AAAoB6B,MAAAA,QAAQ,EAAEpC,IAAI,CAACqC;AAAnC,KAAjC;AACAvB,IAAAA,MAAM,CAACoB,OAAP,CAAeC,IAAf,CAAoB,WAApB,EAAiC;AAAE9B,MAAAA,KAAK,EAAEA,KAAT;AAAgB+B,MAAAA,QAAQ,EAAEpC,IAAI,CAACqC;AAA/B,KAAjC;AACH,GAZD,CA1C2B,CAwD3B;;;AACA9C,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+C,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAM7C,KAAK,CAAC8C,GAAN,CAAW,UAAStC,QAAS,EAA7B,CAAlB;AACAD,MAAAA,OAAO,CAACsC,GAAG,CAACE,IAAL,CAAP;AACH,KAHD;;AAIAH,IAAAA,SAAS;AACZ,GANQ,EAMN,CAACpC,QAAD,CANM,CAAT,CAzD2B,CAiE3B;;AACFX,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,MAAM,CAACoB,OAAP,GAAiBpC,EAAE,CAAC,qBAAD,CAAnB,CADc,CAGd;;AACAgB,IAAAA,MAAM,CAACoB,OAAP,CAAeQ,EAAf,CAAkB,YAAlB,EAAiCD,IAAD,IAAU;AACxCzB,MAAAA,iBAAiB,CAAC;AAChB2B,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QADC;AAEhBC,QAAAA,IAAI,EAAEH,IAAI,CAACG,IAFK;AAGhBC,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHK;AAIhBC,QAAAA,MAAM,EAAEhD,IAAI,CAACwB,GAJG;AAKhByB,QAAAA,oBAAoB,EAAER,IAAI,CAACQ;AALX,OAAD,CAAjB;AAOD,KARD,EAJc,CAcd;;AACAnC,IAAAA,MAAM,CAACoB,OAAP,CAAeQ,EAAf,CAAkB,UAAlB,EAA+BD,IAAD,IAAU;AACpCvB,MAAAA,iBAAiB,CAACuB,IAAI,CAAClC,OAAN,CAAjB;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AACH,KAJD,EAfc,CAqBd;;AACAO,IAAAA,MAAM,CAACoB,OAAP,CAAeQ,EAAf,CAAkB,UAAlB,EAA+BD,IAAD,IAAU;AACpCrB,MAAAA,eAAe,CAACqB,IAAI,CAACpC,KAAN,CAAf;AACH,KAFD;AAGD,GAzBQ,EAyBN,CAACL,IAAD,CAzBM,CAAT,CAlE6B,CA6F7B;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,IAAI,IAAIc,MAAM,CAACoB,OAAP,CAAeC,IAAf,CAAoB,UAApB,EAAgCnC,IAAI,CAACqC,IAArC,CAAR;AACD,GAFQ,EAEN,CAACrC,IAAD,CAFM,CAAT,CA9F6B,CAkG7B;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2D,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMX,GAAG,GAAG,MAAM7C,KAAK,CAAC8C,GAAN,CAAW,aAAYxC,IAAI,CAACwB,GAAI,EAAhC,CAAlB;AACAX,QAAAA,WAAW,CAAC0B,GAAG,CAACE,IAAL,CAAX;AACD,OAHD,CAGE,OAAOd,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KAPD;;AAQAuB,IAAAA,WAAW;AACZ,GAVQ,EAUN,CAAClD,IAAD,CAVM,CAAT,CAnG6B,CA+G7B;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,cAAc,IAAIF,WAAW,CAAEsC,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUpC,cAAV,CAAX,CAA7B;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT,CAhH6B,CAoH7B;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,cAAc,IAAIT,UAAU,CAACS,cAAD,CAA5B;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT,CArH6B,CAyH7B;;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,YAAY,IAAIb,QAAQ,CAACa,YAAD,CAAxB;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,QAAMiC,UAAU,GAAG,MAAO9B,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM8B,OAAO,GAAG;AACdV,MAAAA,QAAQ,EAAExC,IAAI,CAACqB,GADD;AAEdoB,MAAAA,IAAI,EAAEnC,UAFQ;AAGduC,MAAAA,MAAM,EAAEhD,IAAI,CAACwB,GAHC;AAIdyB,MAAAA,oBAAoB,EAAE9C,IAAI,CAACmD;AAJb,KAAhB,CAH8B,CAU9B;;AACAxC,IAAAA,MAAM,CAACoB,OAAP,CAAeC,IAAf,CAAoB,aAApB,EAAmC;AAAEQ,MAAAA,QAAQ,EAAExC,IAAI,CAACqB,GAAjB;AAAsBY,MAAAA,QAAQ,EAAEpC,IAAI,CAACqC,IAArC;AAA2CO,MAAAA,IAAI,EAAEnC,UAAjD;AAA6DwC,MAAAA,oBAAoB,EAAE9C,IAAI,CAACmD;AAAxF,KAAnC;;AAEA,QAAI;AACF,YAAMf,GAAG,GAAG,MAAM7C,KAAK,CAAC6D,IAAN,CAAW,WAAX,EAAwBF,OAAxB,CAAlB;AACAxC,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc2B,GAAG,CAACE,IAAlB,CAAD,CAAX;AACA/B,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAJD,CAIE,OAAOiB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GApBD,CA9H6B,CAoJ7B;;;AACApC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,0BAAAoB,SAAS,CAACuB,OAAV,0EAAmBsB,cAAnB,CAAkC;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAlC;AACD,GAFQ,EAEN,CAAC7C,QAAD,CAFM,CAAT;AAIE,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,EAECZ,IAAI,gBACD;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAGqB,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACE,cAAA,WAAW,EAAC,+BADd;AAEE,cAAA,SAAS,EAAC,aAFZ;AAGE,cAAA,QAAQ,EAAGC,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACoC,MAAF,CAASC,KAAV,CAH3B;AAIE,cAAA,KAAK,EAAEtD;AAJT;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAmBI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAG0B,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eA2BA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACKxB,OAAO,gBACJ;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACI;AACE,gBAAA,KAAK,EAAC,KADR;AAEE,gBAAA,MAAM,EAAC,KAFT;AAGE,gBAAA,GAAG,EAAG,iCAAgCA,OAAQ,EAHhD;AAIE,gBAAA,KAAK,EAAC,sBAJR;AAKE,gBAAA,WAAW,EAAC,GALd;AAME,gBAAA,KAAK,EAAC,0FANR;AAOE,gBAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADI,gBAaJ;AAAI,cAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqBI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,wBACKK,QAAQ,CAACgD,GAAT,CAAcC,CAAD,iBACV;AAAK,gBAAA,GAAG,EAAElD,SAAV;AAAA,uCACI,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAEkD,CAAlB;AAAqB,kBAAA,GAAG,EAAEA,CAAC,CAAClB,QAAF,KAAexC,IAAI,CAACqB;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ,iBAA0BqC,CAAC,CAACrC,GAA5B;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AACE,gBAAA,SAAS,EAAC,kBADZ;AAEE,gBAAA,WAAW,EAAC,oBAFd;AAGE,gBAAA,QAAQ,EAAGF,CAAD,IAAOZ,aAAa,CAACY,CAAC,CAACoC,MAAF,CAASC,KAAV,CAHhC;AAIE,gBAAA,KAAK,EAAElD;AAJT;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AAAQ,gBAAA,SAAS,EAAC,gBAAlB;AAAmC,gBAAA,OAAO,EAAE2C,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BA;AAAA,oBADC,gBA4ED;AAAA;AAAA,qBA9EJ;AAAA,kBADJ;AAmFH;;GA5OuBrD,I;UAEHX,S,EAEDC,U;;;KAJIU,I","sourcesContent":["import './room.css'\nimport Header from '../../components/header/Header'\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Search } from '@material-ui/icons'\nimport Message from '../../components/message/Message'\nimport { io } from 'socket.io-client'\n\nexport default function Room() {\n    const [room, setRoom] = useState({})\n    const roomCode = useParams().roomCode;\n    const { user } = useContext(AuthContext)\n    const history = useHistory();\n    const [query, setQuery] = useState(\"\")\n    const [videoID, setVideoID] = useState(\"\")\n    const [newMessage, setNewMessage] = useState(\"\");\n    const scrollRef = useRef()\n    const [messages, setMessages] = useState([]);\n    const socket = useRef()\n    const [arrivalMessage, setArrivalMessage] = useState(null);\n    const [arrivalVideoID, setArrivalVideoID] = useState(null);\n    const [arrivalQuery, setArrivalQuery] = useState(null);\n\n    // leave room\n    const handleLeave = async (e) => {\n        e.preventDefault();\n        \n        // if host leaves delete room\n        if (user._id === room.hostID) {\n            // delete room messages first\n            try {\n                await axios.delete(`/messages/${room._id}`);\n            } catch(err) {\n                console.log(err)\n            }\n\n            // delete room\n            try {\n                await axios.delete(`/rooms/${user._id}`);\n                history.push(`/login`)\n            } catch(err) {\n                console.log(err)\n            }\n        }\n        else {\n            history.push(`/login`)\n        }\n    }\n\n    // search video\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        const extractID = query.split('v=')[1].split('_')[0]\n        setVideoID(extractID)\n    \n        console.log(\"HANDLE SEARCH\")\n        console.log(query)\n        console.log(videoID)\n\n        socket.current.emit(\"sendVideo\", { videoID: videoID, roomName: room.code })   \n        socket.current.emit(\"sendQuery\", { query: query, roomName: room.code })          \n    }\n\n    // get room object\n    useEffect(() => {\n        const fetchRoom = async () => {\n            const res = await axios.get(`/rooms/${roomCode}`);\n            setRoom(res.data);\n        };\n        fetchRoom();\n    }, [roomCode]);\n\n    // initialize socket connection\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n\n    // look for incoming messages\n    socket.current.on(\"newMessage\", (data) => {\n      setArrivalMessage({\n        senderID: data.senderID,\n        text: data.text,\n        createdAt: Date.now(),\n        roomID: room._id,\n        senderProfilePicture: data.senderProfilePicture\n      });\n    });\n\n    // look for incoming video update\n    socket.current.on(\"newVideo\", (data) => {\n        setArrivalVideoID(data.videoID)\n        console.log(\"NEW VIDEO\")\n        console.log(videoID)\n    });\n\n    // look for incoming query update\n    socket.current.on(\"newQuery\", (data) => {\n        setArrivalQuery(data.query)\n    });\n  }, [room]);\n\n  // join socket room\n  useEffect(() => {\n    room && socket.current.emit(\"joinRoom\", room.code)\n  }, [room])\n\n  // get room messages\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`/messages/${room._id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [room]);\n\n  // new message from socket\n  useEffect(() => {\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  // new video from socket\n  useEffect(() => {\n    arrivalVideoID && setVideoID(arrivalVideoID);\n  }, [arrivalVideoID]);\n\n  // new query from socket\n  useEffect(() => {\n    arrivalQuery && setQuery(arrivalQuery);\n  }, [arrivalQuery]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      senderID: user._id,\n      text: newMessage,\n      roomID: room._id,\n      senderProfilePicture: user.profilePicture\n    };\n\n    // send message to socket\n    socket.current.emit(\"sendMessage\", { senderID: user._id, roomName: room.code, text: newMessage, senderProfilePicture: user.profilePicture})\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // scroll to bottom of messages\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({behavior: 'smooth'})\n  }, [messages])\n\n    return (\n        <>\n        <Header/>\n        {room ? (\n            <>\n            <div className='roomTopbar'>\n                <div className=\"roomTopbarLeft\">\n                    <button className=\"roomBackButton\" onClick={(handleLeave)}>\n                        Leave Room\n                    </button>\n                </div>\n\n                <div className=\"roomTopbarCenter\">\n                    <div className=\"roomSearchbar\">\n                        <Search className=\"searchIcon\"/>\n                        <input\n                          placeholder=\"Enter YouTube video link here\"\n                          className=\"searchInput\"\n                          onChange={(e) => setQuery(e.target.value)}\n                          value={query}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"roomTopbarRight\">\n                    <button className=\"searchSubmit\" onClick={(handleSearch)}>\n                        Search\n                    </button>\n                </div>\n            </div>\n\n            <div className='room'>\n                <div className=\"roomVideo\">\n                    <div className=\"roomVideoWrapper\">\n                        {videoID ? (\n                            <div className=\"videoPlayer\">\n                                <iframe\n                                  width=\"960\"\n                                  height=\"315\" \n                                  src={`https://www.youtube.com/embed/${videoID}` }\n                                  title=\"YouTube Video Player\" \n                                  frameBorder=\"0\" \n                                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                                  allowFullScreen>\n                                </iframe>\n                            </div>\n                        ) : (\n                            <h1 className=\"noVideoMessage\">Enter a YouTube video link</h1>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"roomChat\">\n                    <div className=\"roomChatWrapper\">\n                        <div className=\"chatTop\">\n                            {messages.map((m) => (\n                                <div ref={scrollRef} key={m._id}>\n                                    <Message message={m} own={m.senderID === user._id} />\n                                </div>\n                            ))}\n                        </div>\n\n                        <div className=\"chatBottom\">\n                            <textarea\n                              className=\"chatMessageInput\"\n                              placeholder=\"write something...\"\n                              onChange={(e) => setNewMessage(e.target.value)}\n                              value={newMessage}\n                            >\n                            </textarea>\n                            <button className=\"chatSendButton\" onClick={handleSend}>\n                                Send\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        ) : (\n            <>Room does not exist</>\n        )}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}